name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle Wrapper (without tests)
        run: ./gradlew build -x test

      - name: Upload Build Artifact to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # SSH 키 파일 생성 및 경로 출력
          echo "$EC2_SSH_KEY" > $HOME/my-readMate-key.pem
          chmod 400 $HOME/my-readMate-key.pem
          echo "SSH key file path: $HOME/my-readMate-key.pem"
          ls -al $HOME/my-readMate-key.pem
          
          # 빌드 결과물 전송
          scp -o StrictHostKeyChecking=no -i $HOME/my-readMate-key.pem build/libs/*.jar ubuntu@$EC2_HOST:/home/ubuntu/app/step1/

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # SSH 키 파일 설정
          echo "$EC2_SSH_KEY" > $HOME/my-readMate-key.pem
          chmod 400 $HOME/my-readMate-key.pem

          # SSH를 통해 배포 스크립트 실행
          ssh -o StrictHostKeyChecking=no -i $HOME/my-readMate-key.pem ubuntu@$EC2_HOST "cd /home/ubuntu/app/step1 && ./deploy.sh"
